# Generated by Django 3.1.7 on 2022-11-10 16:54

from django.db import migrations

#from workflows.models import Service, Tenant

def set_tenant_for_descendants(o, tenant):
    o.tenant = tenant
    for child in o.children.all():
        set_tenant_for_descendants(child, tenant)

def tenant_migration(apps, schema_editor):
    Service = apps.get_model('workflows', 'Service')
    Tenant = apps.get_model('workflows', 'Tenant')

    for service in Service.objects.filter(parent=None):
        if service.is_meta:
            continue
        if service.tenant is not None:
            continue
        tenant = Tenant(name=service.name, owner=service.owner)
        tenant.save()
        service.tenant = tenant
        service.save()

        for subservice in service.children.all():
            set_tenant_for_descendants(subservice, tenant)

        #for orgunit in service.organization_units.filter(parent=None):
        #    orgunit.tenant = tenant
        #    orgunit.save()
        #    for subou in orgunit.children.all():
        #        set_tenant_for_descendants(subou, tenant)

        for customer in service.customers.all():
            customer.tenant = tenant
            customer.save()

        for profile in service.profiles.all():
            profile.tenant = tenant
            profile.save()

        for share in service.shares.all():
            share.tenant = tenant
            share.save()

        for workflow in service.workflows.all():
            workflow.tenant = tenant
            workflow.save()
            for step in workflow.steps.all():
                step.tenant = tenant
                step.save()
                for activity in step.activities.all():
                    activity.tenant = tenant
                    activity.save()
                    for responsible in activity.responsibles.all():
                        responsible.tenant = tenant
                        responsible.save()
                        for wi in responsible.work_instructions.all():
                            wi.tenant = tenant
                            wi.save()

class Migration(migrations.Migration):

    dependencies = [
        ('workflows', '0033_tenant_owner'),
    ]

    operations = [
        migrations.RunPython(tenant_migration),
    ]
