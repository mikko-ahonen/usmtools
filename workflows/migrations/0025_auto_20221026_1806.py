# Generated by Django 3.1.7 on 2022-10-26 18:06

from django.db import migrations

def insert_missing_step_to_change(apps, schema_editor):
    Step = apps.get_model('workflows', 'Step')

    results = [ x for x in Step.objects.filter(workflow_id="23d276e2-ce4a-4136-b2cc-286908b0c8f3", index__gt=2).order_by('-index') ]
    for step in results:
        step.index = step.index + 1
        step.save()

    step = Step(id="d271eea4-d70d-452a-968f-9d9067a82e83",
                index=3,
                name="Plan & agree",
                description="Determine the people involved, draft a plan, and agree it with the people involved, according to the type of change granted. If possible, follow a release-based approach, by bundling the handling of related changes. Plan the steps of the changes on the change calendar.",
                workflow_id="23d276e2-ce4a-4136-b2cc-286908b0c8f3",
                created_at="2022-05-28T00:56:14.565Z",
                created_by_id="dba542f1-dea7-4b29-9352-76c0145101bd",
                modified_at="2022-05-28T00:56:14.565Z",
                process="change").save()

def insert_missing_step_to_incidents(apps, schema_editor):
    Step = apps.get_model('workflows', 'Step')

    for id in ['c16ee604-233b-42c9-a03f-6a10c96d8064', 'b94479e2-ce36-4beb-9e5f-76a0cf57967e']:
        results = [ x for x in Step.objects.filter(workflow_id=id, index__gt=2).order_by('-index') ]

        for step in results:
            step.index = step.index + 1
            step.save()

    step = Step(id="d6edead4-042e-48ab-90f3-933d5b3619c8",
                index=3,
                name="Analyze",
                description="Determine how the effect of the failure can be remedied. Find a previously used solution (matching) or have a solution team search for the solution.",
                workflow_id="c16ee604-233b-42c9-a03f-6a10c96d8064",
                created_at="2022-05-28T00:56:14.565Z",
                created_by_id="dba542f1-dea7-4b29-9352-76c0145101bd",
                modified_at="2022-05-28T00:56:14.565Z",
                process="recover").save()

    step = Step(id="8a2b1ec0-57c2-497e-8e5e-263855e0ab8c",
                index=3,
                name="Analyze",
                description="Determine how the effect of the failure can be remedied. Find a previously used solution (matching) or have a solution team search for the solution.",
                workflow_id="b94479e2-ce36-4beb-9e5f-76a0cf57967e",
                created_at="2022-05-28T00:56:14.565Z",
                created_by_id="dba542f1-dea7-4b29-9352-76c0145101bd",
                modified_at="2022-05-28T00:56:14.565Z",
                process="recover").save()

class Migration(migrations.Migration):

    dependencies = [
        ('workflows', '0024_auto_20221026_1728'),
    ]

    operations = [
        #migrations.RunPython(insert_missing_step_to_incidents),
        #migrations.RunPython(insert_missing_step_to_change),
    ]
