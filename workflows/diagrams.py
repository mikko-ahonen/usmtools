from processpiper import ProcessMap, EventType, ActivityType, GatewayType

def diagram(routine, filename, filetype):

    actions = []

    for step in routine.steps.filter(skipped=False).order_by('index'):
        for activity in step.activities.filter(skipped=False).order_by('index'):
            for action in activity.actions.all():
                print(f"Appending {str(action.id)}")
                actions.append(action)

    pools = {}
    lanes = {}
    last_index = len(actions) - 1
    prev = None

    if len(actions) == 0:
        return None

    if filetype in ['svg', 'bpmn']:
        painter_type = 'SVG'
    else:
        painter_type = 'PNG'

    with ProcessMap(routine.name, colour_theme="BLUEMOUNTAIN", painter_type=painter_type) as process_map:
        for index, action in enumerate(actions):

            r = action.get_responsible_responsibility()

            if not r:
                raise ValueError("No responsible")

            if r.profile.organization_unit_id not in pools:
                ou_name = r.profile.organization_unit.name if r.profile.organization_unit else "Generic"
                pool = process_map.add_pool(ou_name)
                pools[r.profile.organization_unit_id] = pool
                lanes[r.profile.organization_unit_id] = {}
            else:
                pool = pools[r.profile.organization_unit_id]

            if r.profile_id not in lanes[r.profile.organization_unit_id]:
                lane = pool.add_lane(r.profile.name if r.profile else "")
                lanes[r.profile.organization_unit_id][r.profile_id] = lane
            else:
                lane = lanes[r.profile.organization_unit_id][r.profile_id]

            if index == 0:
                elem = lane.add_element(r.action.title, EventType.START)
            elif index == last_index:
                elem = lane.add_element(r.action.title, EventType.END)
            else:
                elem = lane.add_element(r.action.title, ActivityType.TASK)

            if prev:
                prev.connect(elem)

            prev = elem


        process_map.set_footer("Generated by USM tools https://usm.tools")

        # The API is stupid
        process_map.draw()

        if filetype == 'bpmn':
            png_fn = filename.replace('.bpmn', '.png')
            process_map.save(png_fn)
            process_map.export_to_bpmn(filename)
        else:
            process_map.save(filename)

    return filename
